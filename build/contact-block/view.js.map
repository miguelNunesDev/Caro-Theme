{"version":3,"file":"contact-block/view.js","mappings":";;;;;AAAA,MAAMA,YAAY,CAAC;EAClBC,WAAWA,CAACC,GAAG,EAAE;IAChB;IACA,IAAI,CAACC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAACH,GAAG,CAAC;IAC5C,IAAI,CAACI,cAAc,GAAG,IAAI,CAACH,SAAS,CAACE,aAAa,CAAC,UAAU,CAAC;IAC9D,IAAI,CAACE,QAAQ,GAAG,IAAI,CAACJ,SAAS,EAAEK,gBAAgB,CAAC,YAAY,CAAC;IAC9D,IAAI,CAACC,OAAO,GAAG,CAAC;IAEhB,IAAI,IAAI,CAACN,SAAS,EAAE;MACnB,IAAI,CAACO,IAAI,CAAC,CAAC;IACZ;EACD;EAEAA,IAAIA,CAAA,EAAG;IACN,IAAI,IAAI,CAACH,QAAQ,EAAE,IAAI,CAACI,WAAW,CAAC,CAAC;EACtC;EAEAA,WAAWA,CAAA,EAAG;IACb,IAAI,CAACC,aAAa,CAAC,CAAC;IACpB,IAAI,CAACC,UAAU,CAAC,IAAI,CAACN,QAAQ,CAAC,IAAI,CAACE,OAAO,CAAC,CAAC;IAC5CK,WAAW,CAAC,MAAM;MACjB,IAAI,CAACF,aAAa,CAAC,CAAC;MACpB,IAAI,CAACC,UAAU,CAAC,IAAI,CAACN,QAAQ,CAAC,IAAI,CAACE,OAAO,CAAC,CAAC;MAC5C,IAAI,CAACA,OAAO,GACX,IAAI,CAACA,OAAO,IAAI,IAAI,CAACF,QAAQ,CAACQ,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAACN,OAAO;IAC/D,CAAC,EAAEO,MAAM,CAAC,IAAI,CAACb,SAAS,CAACc,OAAO,CAACC,KAAK,CAAC,CAAC;EACzC;EACAL,UAAU,GAAGA,CAACM,OAAO,EAAEC,KAAK,GAAG,IAAI,KAAK;IACvCD,OAAO,CAACE,SAAS,CAACC,MAAM,CAAC,WAAW,EAAE,CAACF,KAAK,CAAC;IAC7CD,OAAO,CAACE,SAAS,CAACC,MAAM,CAAC,aAAa,EAAEF,KAAK,CAAC;IAC9CD,OAAO,CAACE,SAAS,CAACC,MAAM,CAAC,qBAAqB,EAAE,CAACF,KAAK,CAAC;IACvD,IAAI,CAACd,cAAc,CAACiB,KAAK,CAACC,KAAK,GAC9BL,OAAO,CAACM,qBAAqB,CAAC,CAAC,CAACD,KAAK,GAAG,IAAI;EAC9C,CAAC;EACDZ,aAAa,GAAGA,CAAA,KAAM;IACrB,IAAI,CAACL,QAAQ,CAACmB,OAAO,CAAEP,OAAO,IAAK;MAClC,IAAI,CAACN,UAAU,CAACM,OAAO,EAAE,KAAK,CAAC;IAChC,CAAC,CAAC;EACH,CAAC;AACF;AACA,MAAMQ,YAAY,GAAG,IAAI3B,YAAY,CAAC,gBAAgB,CAAC,C","sources":["webpack://brads-boilerplate-theme/./src/contact-block/view.js"],"sourcesContent":["class ContactBlock {\n\tconstructor(sel) {\n\t\t// view\n\t\tthis.component = document.querySelector(sel);\n\t\tthis.rotatorWrapper = this.component.querySelector('.rotator');\n\t\tthis.rotators = this.component?.querySelectorAll('.rotator b');\n\t\tthis.current = 0;\n\n\t\tif (this.component) {\n\t\t\tthis.init();\n\t\t}\n\t}\n\n\tinit() {\n\t\tif (this.rotators) this.initRotator();\n\t}\n\n\tinitRotator() {\n\t\tthis.resetRotators();\n\t\tthis.setRotator(this.rotators[this.current]);\n\t\tsetInterval(() => {\n\t\t\tthis.resetRotators();\n\t\t\tthis.setRotator(this.rotators[this.current]);\n\t\t\tthis.current =\n\t\t\t\tthis.current >= this.rotators.length - 1 ? 0 : ++this.current;\n\t\t}, Number(this.component.dataset.speed));\n\t}\n\tsetRotator = (rotator, state = true) => {\n\t\trotator.classList.toggle('opacity-0', !state);\n\t\trotator.classList.toggle('opacity-100', state);\n\t\trotator.classList.toggle('pointer-events-none', !state);\n\t\tthis.rotatorWrapper.style.width =\n\t\t\trotator.getBoundingClientRect().width + 'px';\n\t};\n\tresetRotators = () => {\n\t\tthis.rotators.forEach((rotator) => {\n\t\t\tthis.setRotator(rotator, false);\n\t\t});\n\t};\n}\nconst contactBlock = new ContactBlock('#contact-block');\n"],"names":["ContactBlock","constructor","sel","component","document","querySelector","rotatorWrapper","rotators","querySelectorAll","current","init","initRotator","resetRotators","setRotator","setInterval","length","Number","dataset","speed","rotator","state","classList","toggle","style","width","getBoundingClientRect","forEach","contactBlock"],"sourceRoot":""}